openapi: 3.0.0
info:
  title: API
  version: 1.0.0
paths:
  /tasks:
    get:
      summary: Get all tasks
      tags:
        - tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      tags:
        - tasks
      requestBody:
        description: The task to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /tasks/{id}:
    patch:
      summary: Updates the task
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          description: The task ID
          required: true
          schema:
            type: integer
            format: uint
      requestBody:
        description: The updated task
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: The updated task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    delete:
      summary: Deletes the task
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          description: The task ID
          required: true
          schema:
            type: integer
            format: uint
      responses:
        '204':
          description: No content, the task has been deleted.
  /users:
    get:
      summary: Get all Users
      tags:
        - users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Users'
    post:
      summary: Create a new user
      tags:
        - users
      requestBody:
        description: The user to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
      responses:
        '201':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
  /users/{id}:
    patch:
      summary: Updates the user
      tags:
        - users
      parameters:
        - name: id
          in: path
          description: The User ID
          required: true
          schema:
            type: integer
            format: uint
      requestBody:
        description: The updated user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
      responses:
        '200':
          description: The updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
    delete:
      summary: Deletes the User
      tags:
        - users
      parameters:
        - name: id
          in: path
          description: The user ID
          required: true
          schema:
            type: integer
            format: uint
      responses:
        '204':
          description: No content, this user has been deleted.
  /users/{id}/tasks:
    get:
      summary: Get all tasks from a user
      tags:
        - users
      parameters:
        - name: id
          in: path
          description: The User ID
          required: true
          schema:
            type: integer
            format: uint
      responses:
        '200':
          description: A list of tasks user's
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Users'
         
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: uint # так как в БД айди это только положительные числа.
        task:
          type: string
        is_done:
          type: boolean
        user_id:
          type: integer
          format: uint

    Users:
      type: object
      properties:
        id:
          type: integer
          format: uint # так как в БД айди это только положительные числа.
        email:
          type: string
        password:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'